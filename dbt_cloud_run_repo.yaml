steps:
  - id: "Install Deps"
    name: "python:3.11-slim"
    entrypoint: sh
    args:
      - "-c"
      - |
        apt-get update -y
        apt-get install -y git gettext-base
        pip install uv
        uv venv
        uv pip install -r pyproject.toml
    volumes:
      - name: virtual_env
        path: /.venv

  - id: "Generate Token & Build Profile"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        set -e

        apt-get update && apt-get install -y jq curl gettext-base

        # Get active service account without variable assignment
        echo "Getting active service account..."
        gcloud auth list --filter=status:ACTIVE --format="value(account)" > /workspace/service_account.txt
        echo "Using service account: $(cat /workspace/service_account.txt)"

        echo "Project ID: $_GOOGLE_CLOUD_PROJECT"

        # Generate token without variable assignment
        echo "Generating token with Drive scope..."
        curl -s -X POST \
          -H "Authorization: Bearer $(gcloud auth print-access-token)" \
          -H "Content-Type: application/json" \
          -d '{
            "scope": [
              "https://www.googleapis.com/auth/bigquery",
              "https://www.googleapis.com/auth/drive.readonly"
            ]
          }' \
          "https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/$(cat /workspace/service_account.txt):generateAccessToken" \
          | jq -r '.accessToken' > /workspace/drive_token.txt
        
        # Print token for debugging
        echo "Token generated. ENTIRE TOKEN:"
        cat /workspace/drive_token.txt
        
        # Test the token by making a Drive API call
        echo "Testing token with Drive API..."
        curl -s -H "Authorization: Bearer $(cat /workspace/drive_token.txt)" "https://www.googleapis.com/drive/v3/files?pageSize=1" | jq .
        
        # Create oauth credential file for dbt in workspace directory
        mkdir -p /workspace/.google/
        echo "{\"token\": \"$(cat /workspace/drive_token.txt)\", \"refresh_token\": \"$(cat /workspace/drive_token.txt)\", \"client_id\": \"fake-client-id\", \"client_secret\": \"fake-client-secret\"}" > /workspace/.google/application_default_credentials.json
        
        # List all files in workspace
        echo "Files in workspace directory:"
        find /workspace -type f | sort
        
        # Create profiles.yml with correct indentation
        mkdir -p /workspace/.dbt/
        
        # Write profile file line by line with proper indentation
        echo "dbt_sample_project:" > /workspace/.dbt/profiles.yml
        echo "  outputs:" >> /workspace/.dbt/profiles.yml
        echo "    dev:" >> /workspace/.dbt/profiles.yml
        echo "      type: bigquery" >> /workspace/.dbt/profiles.yml
        echo "      method: oauth" >> /workspace/.dbt/profiles.yml
        echo "      project: \"$_GOOGLE_CLOUD_PROJECT\"" >> /workspace/.dbt/profiles.yml
        echo "      dataset: dbt_sample_data" >> /workspace/.dbt/profiles.yml
        echo "      threads: 4" >> /workspace/.dbt/profiles.yml
        echo "      timeout_seconds: 300" >> /workspace/.dbt/profiles.yml
        echo "  target: dev" >> /workspace/.dbt/profiles.yml
        
        echo "Profile created successfully."
        echo "Full profiles.yml content:"
        cat /workspace/.dbt/profiles.yml

  - id: "Check dbt Project Config"
    name: "python:3.11-slim"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "Checking dbt project configuration..."
        # Look for dbt_project.yml to find the project name
        if [ -f "dbt_project.yml" ]; then
          echo "dbt_project.yml found. Contents:"
          cat dbt_project.yml | grep -A1 "name:"
        else
          echo "dbt_project.yml not found in the root directory."
          find /workspace -name "dbt_project.yml" -type f | xargs cat | grep -A1 "name:" || echo "No dbt_project.yml found in workspace"
        fi
        
        # Create home directory config files
        echo "Creating ADC file in home directory..."
        mkdir -p $HOME/.config/gcloud/
        cp /workspace/.google/application_default_credentials.json $HOME/.config/gcloud/
        
        # List all files
        echo "Files in home directory:"
        find $HOME -type f | sort
        
        echo "Files in workspace:"
        find /workspace -type f | sort

  - id: "DBT Check"
    name: "python:3.11-slim"
    entrypoint: "sh"
    env:
      - 'DBT_PROFILES_DIR=/workspace/.dbt/'
      - 'GOOGLE_OAUTH_TOKEN=$(cat /workspace/drive_token.txt)'
      - 'CLOUDSDK_API_ENDPOINT_OVERRIDES_IAM=https://iam.googleapis.com/'
      - 'CLOUDSDK_AUTH_ACCESS_TOKEN_FILE=/workspace/drive_token.txt'
      - 'GOOGLE_APPLICATION_CREDENTIALS=/workspace/.google/application_default_credentials.json'
    args:
      - "-c"
      - |
        . .venv/bin/activate
        apt-get update && apt-get install -y git
        
        # Set token as environment variable directly in the step
        export DBT_BIGQUERY_TOKEN=$(cat /workspace/drive_token.txt)
        
        # Create home directory config
        mkdir -p $HOME/.config/gcloud/
        cp /workspace/.google/application_default_credentials.json $HOME/.config/gcloud/
        
        echo "Checking ADC file locations:"
        echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS"
        ls -la $GOOGLE_APPLICATION_CREDENTIALS || echo "File not found at GOOGLE_APPLICATION_CREDENTIALS"
        ls -la $HOME/.config/gcloud/application_default_credentials.json || echo "File not found in HOME/.config/gcloud"
        
        dbt --version
        echo "Contents of profiles.yml before running dbt:"
        cat /workspace/.dbt/profiles.yml
        dbt deps --profile dbt_sample_project
        dbt compile --profile dbt_sample_project
        dbt debug --profile dbt_sample_project
        dbt ls --profile dbt_sample_project
    volumes:
      - name: virtual_env
        path: /.venv

  - id: "DBT Run"
    name: "python:3.11-slim"
    entrypoint: "sh"
    env:
      - 'DBT_PROFILES_DIR=/workspace/.dbt/'
      - 'GOOGLE_OAUTH_TOKEN=$(cat /workspace/drive_token.txt)'
      - 'CLOUDSDK_API_ENDPOINT_OVERRIDES_IAM=https://iam.googleapis.com/'
      - 'CLOUDSDK_AUTH_ACCESS_TOKEN_FILE=/workspace/drive_token.txt'
      - 'GOOGLE_APPLICATION_CREDENTIALS=/workspace/.google/application_default_credentials.json'
    args:
      - "-c"
      - |
        . .venv/bin/activate
        
        # Set token as environment variable directly in the step
        export DBT_BIGQUERY_TOKEN=$(cat /workspace/drive_token.txt)
        
        # Create home directory config
        mkdir -p $HOME/.config/gcloud/
        cp /workspace/.google/application_default_credentials.json $HOME/.config/gcloud/
        
        # List all files for debugging
        echo "Files in home directory:"
        find $HOME -type f | sort
        
        echo "Files in workspace:"
        find /workspace -type f | sort
        
        echo "Files in current directory:"
        ls -la
        
        echo "Checking ADC file existence:"
        echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS"
        ls -la $GOOGLE_APPLICATION_CREDENTIALS || echo "File not found at GOOGLE_APPLICATION_CREDENTIALS path"
        ls -la $HOME/.config/gcloud/application_default_credentials.json || echo "File not found in HOME/.config/gcloud"
        
        dbt deps --profile dbt_sample_project
        dbt run --profile dbt_sample_project
    volumes:
      - name: virtual_env
        path: /.venv

options:
  logStreamingOption: STREAM_ON
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _GOOGLE_CLOUD_PROJECT: "earnest-beacon-455013-n6"