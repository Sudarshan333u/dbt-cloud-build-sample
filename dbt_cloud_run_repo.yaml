steps:
  - id: "Install Deps"
    name: "python:3.11-slim"
    entrypoint: sh
    args:
      - "-c"
      - |
        apt-get update -y
        apt-get install -y git gettext-base
        pip install uv
        uv venv
        uv pip install -r pyproject.toml
    volumes:
      - name: virtual_env
        path: /.venv

  - id: "Generate Token & Build Profile"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        set -e

        apt-get update && apt-get install -y jq curl gettext-base

        SERVICE_ACCOUNT=$(gcloud auth list --filter=status:ACTIVE --format="value(account)")
        echo "Using service account: $SERVICE_ACCOUNT"

        PROJECT_ID="$_GOOGLE_CLOUD_PROJECT"
        echo "Project ID: $PROJECT_ID"

        ACCESS_TOKEN=$(curl -s -X POST \
          -H "Authorization: Bearer $(gcloud auth print-access-token)" \
          -H "Content-Type: application/json" \
          -d '{
            "scope": [
              "https://www.googleapis.com/auth/bigquery",
              "https://www.googleapis.com/auth/drive.readonly"
            ]
          }' \
          "https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/$SERVICE_ACCOUNT:generateAccessToken" \
          | jq -r '.accessToken')

        if [ -z "$ACCESS_TOKEN" ] || [ "$ACCESS_TOKEN" = "null" ]; then
          echo "Failed to generate token"
          exit 1
        fi

        echo "$ACCESS_TOKEN" > /workspace/drive_token.txt
        mkdir -p /workspace/.dbt/

        cat > /workspace/.dbt/profiles.yml.template <<EOF
        default:
          outputs:
            dev:
              type: bigquery
              method: oauth
              token: \$ACCESS_TOKEN
              project: \$PROJECT_ID
              dataset: dbt_dataset
              threads: 4
              timeout_seconds: 300
          target: dev
        EOF

        export ACCESS_TOKEN PROJECT_ID
        envsubst < /workspace/.dbt/profiles.yml.template > /workspace/.dbt/profiles.yml
        echo "Final profiles.yml:"
        cat /workspace/.dbt/profiles.yml

  - id: "DBT Check"
    name: "python:3.11-slim"
    entrypoint: sh
    env:
      - 'DBT_PROFILES_DIR=/workspace/.dbt/'
    args:
      - "-c"
      - |
        . .venv/bin/activate
        apt-get update && apt-get install -y git
        dbt --version
        dbt deps
        dbt debug
        dbt ls
    volumes:
      - name: virtual_env
        path: /.venv

  - id: "DBT Run"
    name: "python:3.11-slim"
    entrypoint: sh
    env:
      - 'DBT_PROFILES_DIR=/workspace/.dbt/'
    args:
      - "-c"
      - |
        . .venv/bin/activate
        dbt deps
        dbt run
    volumes:
      - name: virtual_env
        path: /.venv

options:
  logStreamingOption: STREAM_ON
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _GOOGLE_CLOUD_PROJECT: "earnest-beacon-455013-n6"
